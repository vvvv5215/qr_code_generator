import segno
from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()

@app.get('/api/ping')
def ping():
    return {"ping": "pong"}

@app.post("/api/generate")
async def form(item: Request):
    try:
        data = await item.json()
        url = data["url"]
        qrcode = segno.make(url, micro=False)
        qr = qrcode.svg_data_uri(scale=10)
        return {"qr": qr}
    except Exception as err:
        print(err)
        return {
            "qr": "data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='269' height='269' viewBox='0 0 269 269' fill='none'%3e%3cpath dfill='black'/%3e%3cpath dstroke='black' stroke-width='10'/%3e%3cpath d='M7 60L109.334 8.119C110.336 7.61126 111.285 8.88542 110.511 9.69958L15.6853 109.541C14.8809 110.387 15.9331 111.691 16.9306 111.083L169.313 18.2685C170.305 17.6641 171.357 18.9531 170.565 19.8037L22.5144 178.924C21.6848 179.815 22.8677 181.135 23.8442 180.407L229.803 26.865C230.76 26.1519 231.937 27.4111 231.161 28.3172L36.0636 256.086C35.2633 257.02 36.5288 258.294 37.4684 257.5L260.178 69.3411C261.081 68.5783 262.327 69.7373 261.632 70.6931L125.274 258.186C124.638 259.06 125.648 260.181 126.583 259.64L259.986 182.531C260.891 182.008 261.89 183.048 261.332 183.931L212 262' stroke='%23FF2323' stroke-width='14' stroke-linecap='round'/%3e%3crect x='49' y='109' width='190' height='54' rx='13' fill='%23CCCCCC'/%3e%3cpath d='M96.112 147V124.6H110.512V128.44H100.336V133.784H109.616V137.624H100.336V143.16H110.704V147H96.112ZM113.831 147V124.6H123.559C124.967 124.6 126.193 124.845 127.239 125.336C128.284 125.827 129.095 126.52 129.671 127.416C130.247 128.312 130.535 129.368 130.535 130.584V130.968C130.535 132.312 130.215 133.4 129.575 134.232C128.935 135.064 128.145 135.672 127.207 136.056V136.632C128.06 136.675 128.721 136.973 129.191 137.528C129.66 138.061 129.895 138.776 129.895 139.672V147H125.671V140.28C125.671 139.768 125.532 139.352 125.255 139.032C124.999 138.712 124.561 138.552 123.943 138.552H118.055V147H113.831ZM118.055 134.712H123.111C124.113 134.712 124.892 134.445 125.447 133.912C126.023 133.357 126.311 132.632 126.311 131.736V131.416C126.311 130.52 126.033 129.805 125.479 129.272C124.924 128.717 124.135 128.44 123.111 128.44H118.055V134.712ZM134.049 147V124.6H143.778C145.186 124.6 146.412 124.845 147.458 125.336C148.503 125.827 149.314 126.52 149.89 127.416C150.466 128.312 150.753 129.368 150.753 130.584V130.968C150.753 132.312 150.434 133.4 149.794 134.232C149.154 135.064 148.364 135.672 147.426 136.056V136.632C148.279 136.675 148.94 136.973 149.41 137.528C149.879 138.061 150.114 138.776 150.114 139.672V147H145.89V140.28C145.89 139.768 145.751 139.352 145.474 139.032C145.218 138.712 144.78 138.552 144.162 138.552H138.274V147H134.049ZM138.274 134.712H143.33C144.332 134.712 145.111 134.445 145.666 133.912C146.242 133.357 146.53 132.632 146.53 131.736V131.416C146.53 130.52 146.252 129.805 145.698 129.272C145.143 128.717 144.354 128.44 143.33 128.44H138.274V134.712ZM162.972 147.448C160.156 147.448 157.916 146.68 156.252 145.144C154.588 143.587 153.756 141.368 153.756 138.488V133.112C153.756 130.232 154.588 128.024 156.252 126.488C157.916 124.931 160.156 124.152 162.972 124.152C165.788 124.152 168.028 124.931 169.692 126.488C171.356 128.024 172.188 130.232 172.188 133.112V138.488C172.188 141.368 171.356 143.587 169.692 145.144C168.028 146.68 165.788 147.448 162.972 147.448ZM162.972 143.672C164.551 143.672 165.778 143.213 166.652 142.296C167.527 141.379 167.964 140.152 167.964 138.616V132.984C167.964 131.448 167.527 130.221 166.652 129.304C165.778 128.387 164.551 127.928 162.972 127.928C161.415 127.928 160.188 128.387 159.292 129.304C158.418 130.221 157.98 131.448 157.98 132.984V138.616C157.98 140.152 158.418 141.379 159.292 142.296C160.188 143.213 161.415 143.672 162.972 143.672ZM175.893 147V124.6H185.621C187.029 124.6 188.256 124.845 189.301 125.336C190.347 125.827 191.157 126.52 191.733 127.416C192.309 128.312 192.597 129.368 192.597 130.584V130.968C192.597 132.312 192.277 133.4 191.637 134.232C190.997 135.064 190.208 135.672 189.269 136.056V136.632C190.123 136.675 190.784 136.973 191.253 137.528C191.723 138.061 191.957 138.776 191.957 139.672V147H187.733V140.28C187.733 139.768 187.595 139.352 187.317 139.032C187.061 138.712 186.624 138.552 186.005 138.552H180.117V147H175.893ZM180.117 134.712H185.173C186.176 134.712 186.955 134.445 187.509 133.912C188.085 133.357 188.373 132.632 188.373 131.736V131.416C188.373 130.52 188.096 129.805 187.541 129.272C186.987 128.717 186.197 128.44 185.173 128.44H180.117V134.712Z' fill='black'/%3e%3c/svg%3e",
            "error": str(err),
        }


app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get('/api/ping')
def ping():
    return {"ping": "pong"}

@app.post("/api/generate")
async def form(item: Request):
    try:
        data = await item.json()
        url = data["url"]
        qrcode = segno.make(url, micro=False)
        qr = qrcode.svg_data_uri(scale=10)
        return {"qr": qr}
    except Exception as err:
        print(err)
        return {
            "qr": "data:image/svg+xml;charset=UTF-8,...",  
        }